import t from"isomorphic-unfetch";function e(){return e=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])}return t},e.apply(this,arguments)}class r{constructor(t){this.apikey=void 0,this.baseUrl=void 0,this.apikey=t.apikey,this.baseUrl=t.baseUrl||"https://openai80.p.rapidapi.com/"}invoke(r,o){const i=`${this.baseUrl}${r}`,s=e({},o,{headers:{"Content-Type":"application/json","X-RapidAPI-Key":this.apikey,"X-RapidAPI-Host":"openai80.p.rapidapi.com"}});return t(i,s).then(t=>{if(t.ok)return t.json();throw new Error(t.statusText)})}}const o="models";class i extends r{}var s;s=i,[class extends r{getModels(){return this.invoke(`${o}`)}getModelByName(t){return this.invoke(`${o}/${t}`)}createChatCompletion(t){return this.invoke("chat/completions",{method:"POST",data:JSON.stringify(t)})}}].forEach(t=>{Object.getOwnPropertyNames(t.prototype).forEach(e=>{Object.defineProperty(s.prototype,e,Object.getOwnPropertyDescriptor(t.prototype,e)||Object.create(null))})});export{i as default};
